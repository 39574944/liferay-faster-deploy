#!/bin/bash

checksnapshots() {
	if [ ! -f "$GIT_ROOT/build.properties" ]; then
		return 0
	fi

	if [ ! -f "$GIT_ROOT/build.xml" ] || [ "" == "$(grep -F setup-sdk "$GIT_ROOT/build.xml")" ]; then
		return 0
	fi

	# Identify the Maven repository where we are installing artifacts

	local repository_root=

	if [ -f "$GIT_ROOT/build.$USER.properties" ]; then
		repository_root=$(grep -F 'build.repository.local.dir=' "$GIT_ROOT/build.$USER.properties" | cut -d'=' -f 2 | sed 's@${project.dir}/@'$GIT_ROOT'/@g' | sed 's@${user.home}/@'$HOME'/@g')
	fi

	if [ "" == "$repository_root" ]; then
		repository_root=$(grep -F 'build.repository.local.dir=' "$GIT_ROOT/build.properties" | cut -d'=' -f 2 | sed 's@${project.dir}/@'$GIT_ROOT'/@g' | sed 's@${user.home}/@'$HOME'/@g')
	fi

	if [ "" == "$repository_root" ]; then
		repository_root="${HOME}/.m2/repository"
	fi

	echo "Checking ${repository_root} for Maven artifacts"

	# Check for missing artifacts

	local artifacts=$(grep -F version $GIT_ROOT/.gradle/gradle.properties | grep -F 'com.liferay' | cut -d'=' -f 1 | sed 's/\.version$//g')

	for artifact in $artifacts; do
		local artifact_version=$(grep -F "${artifact}.version" $GIT_ROOT/.gradle/gradle.properties | cut -d'=' -f 2)
		local folder=$(echo $artifact | cut -d'.' -f 3- | tr '.' '-')

		if [ -d "${repository_root}/com/liferay/portal/${artifact}/${artifact_version}" ]; then
			local change_time=$(modifiedtime $folder)
			local cache_time=$(modifiedtime "${repository_root}/com/liferay/portal/${artifact}/${artifact_version}")

			if [ "$change_time" == "$cache_time" ]; then
				continue
			fi

			echo "Outdated snapshot for $artifact (${artifact_version}), last modified: ${change_time}, last built: ${cache_time}"
			missing_artifact="$missing_artifact $artifact"
		else
			echo "Missing snapshot for $artifact (${artifact_version})"
			missing_artifact="$missing_artifact $artifact"
		fi
	done

	if [ "" == "$missing_artifact" ]; then
		return 0
	fi

	echo "Running install-portal-snapshot to ensure all snapshots are available"

	pushd $GIT_ROOT > /dev/null

	# Run the pre-checks for ant

	if [ -d "${GIT_ROOT}/modules" ]; then
		pushd $GIT_ROOT > /dev/null
		ant compile
		popd > /dev/null
	fi

	for candidate_folder in $(sed -n '/target name="deploy"/,/\/target/p' ${GIT_ROOT}/build.xml | grep -F 'ant dir' | grep -F 'target="deploy"' | cut -d'"' -f 2); do
		for artifact in $missing_artifact; do
			local folder=$(echo $artifact | cut -d'.' -f 3- | tr '.' '-')

			if [ "$candidate_folder" != "$folder" ]; then
				continue
			fi

			pushd $folder > /dev/null
			ant install-portal-snapshot
			popd > /dev/null
		done
	done

	popd > /dev/null

	for artifact in $artifacts; do
		local artifact_version=$(grep -F "${artifact}.version" $GIT_ROOT/.gradle/gradle.properties | cut -d'=' -f 2)
		local folder=$(echo $artifact | cut -d'.' -f 3- | tr '.' '-')
		local change_time=$(modifiedtime $folder)

		for artifact_file in $(find "${repository_root}/com/liferay/portal/${artifact}/${artifact_version}"); do
			touch -t $change_time "$artifact_file"
		done
	done
}

modifiedtime() {
	python $(dirname "${BASH_SOURCE[0]}")/modifiedtime.py "$@"
}

setopts() {
	. $(dirname "${BASH_SOURCE[0]}")/setopts
}

setopts && checksnapshots
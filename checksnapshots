#!/bin/bash

checksnapshots() {
	if [ ! -f "$GIT_ROOT/build.properties" ]; then
		return 0
	fi

	if [ "" == "$(grep -F setup-sdk build.xml)" ]; then
		return 0
	fi

	# Run the pre-checks for ant

	if [ "" != "$(grep setup-libs build.xml)" ]; then
		if [[ $(ls -1 "$GIT_ROOT/lib/portal" | wc -l) -lt $(cat "$GIT_ROOT/lib/portal/dependencies.properties" | wc -l) ]]; then
			pushd $GIT_ROOT > /dev/null
			ant setup-libs
			popd > /dev/null
		fi
	fi

	if [ ! -f "$GIT_ROOT/.gradle/gradle.properties" ] || [ ! -d "$GIT_ROOT/tools/sdk" ]; then
		pushd $GIT_ROOT > /dev/null
		ant setup-sdk
		popd > /dev/null
	fi

	# Identify the Maven repository where we are installing artifacts

	local repository_root=

	if [ -f "$GIT_ROOT/build.$USER.properties" ]; then
		repository_root=$(grep -F 'build.repository.local.dir=' "$GIT_ROOT/build.$USER.properties" | cut -d'=' -f 2 | sed 's@${project.dir}/@'$GIT_ROOT'/@g')
	fi

	if [ "" == "$repository_root" ]; then
		repository_root=$(grep -F 'build.repository.local.dir=' "$GIT_ROOT/build.properties" | cut -d'=' -f 2 | sed 's@${project.dir}/@'$GIT_ROOT'/@g')
	fi

	if [ "" == "$repository_root" ]; then
		repository_root="${HOME}/.m2/repository"
	fi

	echo "Checking ${repository_root} for Maven artifacts"

	# Check for missing artifacts

	for artifact in $(grep -F version $GIT_ROOT/.gradle/gradle.properties | grep -F 'com.liferay' | cut -d'=' -f 1 | sed 's/\.version$//g'); do
		local artifact_version=$(grep -F "${artifact}.version" $GIT_ROOT/.gradle/gradle.properties | cut -d'=' -f 2)
		local folder=$(echo $artifact | cut -d'.' -f 3- | tr '.' '-')

		if [ -d "${repository_root}/com/liferay/portal/${artifact}/${artifact_version}" ]; then
			local commit_time=$(git log -1 --pretty='%cd' --date=format:'%Y%m%d%H%M.%S' -- $folder)
			local cache_time=$(perl -MPOSIX -e 'print POSIX::strftime "%Y%m%d%H%M.%S", localtime((stat $ARGV[0])[9])' "${repository_root}/com/liferay/portal/${artifact}/${artifact_version}")

			if [ "$commit_time" == "$cache_time" ]; then
				continue
			fi

			echo "Outdated snapshot for $artifact (${artifact_version})"
			missing_artifact="$missing_artifact $artifact"
		else
			echo "Missing snapshot for $artifact (${artifact_version})"
			missing_artifact="$missing_artifact $artifact"
		fi
	done

	if [ "" == "$missing_artifact" ]; then
		return 0
	fi

	echo "Running install-portal-snapshots to ensure all snapshots are available"

	pushd $GIT_ROOT > /dev/null
	ant compile install-portal-snapshots
	popd > /dev/null

	for artifact in $missing_artifact; do
		local folder=$(echo $artifact | cut -d'.' -f 3- | tr '.' '-')
		local commit_time=$(git log -1 --pretty='%cd' --date=format:'%Y%m%d%H%M.%S' -- $folder)

		touch -t $commit_time "${repository_root}/com/liferay/portal/${artifact}/${artifact_version}"
	done
}

setopts() {
	. $(dirname "${BASH_SOURCE[0]}")/setopts
}

setopts && checksnapshots
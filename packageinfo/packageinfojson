#!/bin/bash

SCRIPT_FOLDER=$(dirname $0)

s3upload() {
	. ${SCRIPT_FOLDER}/s3upload $1
}

if [ -z "${PORTAL_SOURCE_ROOT_70}" ]; then
	echo "Please set a PORTAL_SOURCE_ROOT_70 for the build"
	exit 1
fi

if [ -z "${PORTAL_SOURCE_ROOT_71}" ]; then
	echo "Please set a PORTAL_SOURCE_ROOT_71 for the build"
	exit 1
fi

# Make sure the packageinfo files are up to date

if [ "update" == "$1" ]; then
	. ${SCRIPT_FOLDER}/packageinfo
fi

# Generate the JSON files

python ${SCRIPT_FOLDER}/packageinfojson.py $(dirname $PORTAL_SOURCE_ROOT_70) $(dirname $PORTAL_SOURCE_ROOT_71)
python ${SCRIPT_FOLDER}/requireschemajson.py $(dirname $PORTAL_SOURCE_ROOT_70) $(dirname $PORTAL_SOURCE_ROOT_71)

# Upload the files to the designated bucket

if [ "" != "${S3_BUCKET}" ]; then
	for file in dxppackages dxpmodules dxpschemas; do
		s3upload ${file}.json

		pushd $(dirname ${BASH_SOURCE[0]}) > /dev/null

		s3upload ${file}.html
		s3upload ${file}.js

		popd > /dev/null
	done

	cd /run/shm

	rm -f metadata-70x.zip
	zip -jqqr metadata-70x.zip $(dirname $PORTAL_SOURCE_ROOT_70)/metadata
	s3upload metadata-70x.zip

	rm -f metadata-71x.zip
	zip -jqqr metadata-71x.zip $(dirname $PORTAL_SOURCE_ROOT_71)/metadata
	s3upload metadata-71x.zip
fi
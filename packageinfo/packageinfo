#!/bin/bash

checkpython() {
	$(dirname ${BASH_SOURCE[0]})/../checkpython $@
}

dirnames() {
	python $(dirname $0)/../dirnames.py
}

packageinfo() {
	local OUTPUT_FILE=

	if [[ $1 == fix-pack-base-* ]]; then
		OUTPUT_FILE=$(dirname $PWD)/packageinfo-7010-base.txt
	elif [[ $1 == fix-pack-* ]]; then
		OUTPUT_FILE=$(dirname $PWD)/packageinfo-$(echo "$1" | cut -d'-' -f 5)-$(echo "$1" | cut -d'-' -f 3,4).txt
	else
		OUTPUT_FILE=$(dirname $PWD)/packageinfo-$(echo "$1" | cut -d'-' -f 1 | sed 's/\.\([0-9]\)$/\.0\1/g' | tr -d '.')-$(echo "$1" | cut -d'-' -f 2-).txt
	fi

	if [ -f $OUTPUT_FILE ]; then
		echo "${OUTPUT_FILE} has already been generated"
		return 0
	fi

	echo "Generating bundle packageinfo for $1"

	if [ "" == "$(git tag | grep -F "$1")" ]; then
		if [[ $1 == fix-pack-* ]]; then
			git fetch --no-tags git@github.com:liferay/liferay-portal-ee.git tags/$1:refs/tags/$1
		else
			git fetch --no-tags git@github.com:liferay/liferay-portal.git tags/$1:refs/tags/$1
		fi

		if [ "" == "$(git tag | grep -F "$1")" ]; then
			return 1
		fi
	fi

	git clean -xdf
	git reset --hard
	git checkout $1

	# Generate the source trie

	mkdir -p .redeploy

	$(dirname $0)/../sourcetrie

	cat /dev/null > .redeploy/packageinfo.txt

	# Handle root projects, which might not have packageinfo files

	for folder in $(ls -1 . | sort -u); do
		if [ -f $folder/bnd.bnd ]; then
			find "$folder/src" -type f -printf '%h\n' | sort -u >> .redeploy/packageinfo.txt
		fi
	done

	# Handle modules, which always have packageinfo files

	git ls-files modules | grep -F '/packageinfo' | grep -vF '/sdk/' | dirnames | sort >> .redeploy/packageinfo.txt

	$(dirname $0)/../sourcetrie
	python $(dirname $0)/packageinfo.py $OUTPUT_FILE
}

if [ -z "${PORTAL_SOURCE_ROOT}" ]; then
	echo "Please set a PORTAL_SOURCE_ROOT for the build"
	exit 1
fi

checkpython pandas

if [[ 0 -ne $? ]]; then
	exit 1
fi

pushd "$PORTAL_SOURCE_ROOT" > /dev/null

git ls-remote -t git@github.com:liferay/liferay-portal.git | \
	awk '{ print $2 }' | grep ga | grep -vF sync | grep -vF 'private' | grep -F '/7.0' | \
	sort | cut -d'/' -f 3 > .redeploy/tags.txt

git ls-remote -t git@github.com:liferay/liferay-portal-ee.git | \
	awk '{ print $2 }' | grep 'fix-pack-\(base-70\|de-\)' | grep -v '\(test\|demo\)' | \
	sort -t'-' -nk4,5 | cut -d'/' -f 3 >> .redeploy/tags.txt

for tag_id in $(cat .redeploy/tags.txt); do
	packageinfo $tag_id
done

popd > /dev/null
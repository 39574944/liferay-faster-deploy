#!/bin/bash

pushorigin() {
	local origin_name=origin
	local upstream_name=upstream

	if [ "" == "$2" ]; then
		return 1
	fi

	upstream_name=$2

	if [[ "$3" == origin* ]]; then
		origin_name=$3

		local origin_url=$(git remote -v | grep "^${2}\s" | awk '{ print $2 }' | uniq)

		if [ "" == "$origin_url" ]; then
			echo "Unable to determine upstream corresponding to $2/$1"
			return 1
		fi

		upstream_name=$(git remote -v | grep -F $(echo $origin_url | cut -d'/' -f 2) | grep -vF $origin_url | awk '{ print $1 }' | uniq)

		if [ "" == "$upstream_name" ]; then
			return 0
		fi
	else
		local upstream_url=$(git remote -v | grep "^${2}\s" | awk '{ print $2 }' | uniq)

		if [ "" == "$upstream_url" ]; then
			echo "Unable to determine origin corresponding to $2/$1"
			return 1
		fi

		origin_name=$(git remote -v | grep -F $(echo $upstream_url | cut -d'/' -f 2) | grep -vF $upstream_url | awk '{ print $1 }' | uniq)

		if [ "" == "$origin_name" ]; then
			return 0
		fi
	fi

	echo "Updating $1 on $origin_name"

	if [ "" == "$(git for-each-ref --format='%(refname)' refs/heads/$1)" ]; then
		git fetch $upstream_name --no-tags $1:$1
	fi

	if [ "" == "$(git for-each-ref --format='%(refname)' refs/remotes/$origin_name/$1)" ]; then
		for commit in $(git log --reverse --pretty='%H' $1 | awk 'NR % 10000 == 0'); do
			git push $origin_name $commit:refs/heads/$1
		done
	else
		for commit in $(git log --reverse --pretty='%H' $origin_name/$1..$1 | awk 'NR % 10000 == 0'); do
			git push $origin_name $commit:refs/heads/$1
		done
	fi

	git push $origin_name $1:$1
}

pushorigin $1 $2
#!/bin/bash

baseline() {
	$(dirname "${BASH_SOURCE[0]}")/baseline
}

findreviewer() {
	. $(dirname "${BASH_SOURCE[0]}")/findreviewer "$*"
}

fixdeps() {
	$(dirname "${BASH_SOURCE[0]}")/../packageinfo/fixdeps
}

formatsource() {
	$(dirname "${BASH_SOURCE[0]}")/formatsource
}

gitchanges() {
	. $(dirname "${BASH_SOURCE[0]}")/../gitchanges $@
}

pmdreport() {
	$(dirname "${BASH_SOURCE[0]}")/pmdreport
}

sendpull() {
	if [ "" == "$1" ]; then
		echo Please specify a reviewer
		return 1
	fi

	local HAS_CHANGES=$(git status -s | grep -vF '??')

	if [ "" != "$HAS_CHANGES" ]; then
		echo "Please commit local modifications before sending a pull request"
		return 1
	fi

	# Figure out where we are pushing our branch

	if [ -f "$GIT_ROOT/release.properties" ]; then
		. $(dirname "${BASH_SOURCE[0]}")/../getparent
	else
		CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
		BASE_BRANCH=master
	fi

	remote_name=$(git for-each-ref --format='%(refname)' refs/remotes/ | grep "/origin[^/]*/${BASE_BRANCH}$" | cut -d'/' -f 3)

	if [ "" == "$remote_name" ]; then
		echo "Unable to identify origin for $BASE_BRANCH"
		return 1
	fi

	if [ "" == "$BASE_BRANCH" ]; then
		echo Unable to identify base branch
		return 1
	fi

	if [ "master" == "$CURRENT_BRANCH" ]; then
		echo Attempted to submit pull request from master
		return 1
	fi

	# Figure out who we are sending things for review

	findreviewer $@

	if [[ 0 -ne $? ]]; then
		return 1
	fi

	echo "Reviewer: ${reviewer}"

	# Rebase against the upstream variant of the branch

	upstream_remote=$(git for-each-ref --format='%(refname)' refs/remotes/ | grep "/upstream[^/]*/${BASE_BRANCH}$" | cut -d'/' -f 3)

	if [ "" == "$upstream_remote" ]; then
		echo "Unable to identify upstream equivalent of $BASE_BRANCH"
		return 1
	fi

	git fetch --no-tags ${upstream_remote}
	git rebase ${upstream_remote}/${BASE_BRANCH}

	if [[ 0 -ne $? ]]; then
		return 1
	fi

	if [ -f "$GIT_ROOT/release.properties" ]; then
		pushd $GIT_ROOT > /dev/null

		gitchanges ${upstream_remote}/$BASE_BRANCH && fixdeps && baseline && formatsource && pmdreport
		EXIT_CODE=$?

		popd > /dev/null

		if [[ 0 -ne $EXIT_CODE ]]; then
			return 1
		fi

		HAS_CHANGES=$(git status -s | grep -vF '??')

		if [ "" != "$HAS_CHANGES" ]; then
			echo "Detected files modified during sanity check, please commit them before sending a pull request"
			return 1
		fi
	fi

	# Update our origin

	git push -f $remote_name $CURRENT_BRANCH

	if [[ 0 -ne $? ]]; then
		return 1
	fi

	# Open a web browser so we can submit the pull request

	current_user=$(git remote -v | grep origin | cut -d':' -f 2 | cut -d'/' -f 1 | sort -u)
	reviewer_repository=$(git remote get-url $upstream_remote | cut -d'/' -f 2 | sed 's/\.git$//g' | uniq)

	python -m webbrowser "https://github.com/${reviewer}/${reviewer_repository}/compare/${BASE_BRANCH}...${current_user}:${CURRENT_BRANCH}"
}

setopts() {
	. $(dirname "${BASH_SOURCE[0]}")/../setopts
}

setopts

if [[ 0 -ne $? ]]; then
	exit 1
fi

sendpull $@
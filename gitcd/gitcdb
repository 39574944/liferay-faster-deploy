#!/bin/bash

gitcdb() {
	if [ "" == "$1" ]; then
		echo 'Please specify a Bundle-SymbolicName to locate'
		return 1
	fi

	# git ls-files wants a relative path, so let's generate it

	local ROOT_FOLDER=$(python -c "from __future__ import print_function; import os.path; print(os.path.relpath('$GIT_ROOT', '$PWD'))")

	# use git ls-files to find bnd.bnd files, then use grep -l to list matching files

	local SCRATCH_FILE=$GIT_ROOT/.redeploy/lsfiles.txt
	git ls-files $ROOT_FOLDER | grep bnd.bnd > "$SCRATCH_FILE"

	local BND=$(cat "$SCRATCH_FILE" | xargs grep -l "Bundle-SymbolicName: .*${1}.*$")

	if [ "" == "$BND" ]; then
		echo "Could not find Bundle-SymbolicName $1"
		return 1
	fi

	if [[ 1 -ne $(echo "$BND" | wc -l) ]]; then
		echo "$1 is ambiguous:"
		cat "$SCRATCH_FILE" | xargs grep -oh "Bundle-SymbolicName: .*${1}.*$" | cut -d' ' -f 2
		return 1
	fi

	#builtin cd $(dirname $BND)
	#pwd
}

. "$(dirname "${BASH_SOURCE[0]}")/../setopts"

if [ "" != "$GIT_ROOT" ]; then
	gitcdb $@
fi
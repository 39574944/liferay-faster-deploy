#!/bin/bash

gitcdp() {
	if [ "" == "$1" ]; then
		echo 'Please specify a packageinfo to locate'
		return 1
	fi

	# git ls-files wants a relative path, so let's generate it

	local ROOT_FOLDER=$(echo "$GIT_ROOT" | relpaths)

	# use git ls-files to find packageinfo files

	local SEARCH_STRING=$(echo $1 | sed 's@\.@/@g')
	local PACKAGEINFO=$(git ls-files $ROOT_FOLDER | grep -F "/${SEARCH_STRING}/packageinfo")

	if [ "" == "$PACKAGEINFO" ]; then
		echo "No packageinfo found for $1"
		return 1
	fi

	cat "$PACKAGEINFO"
	echo ""

	# we might be in the folder already, so account for that

	local MATCHING_FOLDERS=$(echo $PACKAGEINFO | grep -o '.*/src')

	if [ "" != "$MATCHING_FOLDERS" ]; then
		builtin cd $(dirname $MATCHING_FOLDERS)
	fi

	pwd
}

relpaths() {
	python $(dirname ${BASH_SOURCE[0]})/../relpaths.py
}

. "$(dirname "${BASH_SOURCE[0]}")/../setopts"

if [ "" != "$GIT_ROOT" ]; then
	gitcdp $@
fi
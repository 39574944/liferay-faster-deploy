#!/bin/bash

TIMESTAMP=$(date +%Y%m%d)

branch() {
	if [ ! -d "$BUILD_FOLDER_PREFIX/$1" ]; then
		return 0
	fi

	checkout $1 && git rebase upstream/$1

	if [[ 0 -ne $? ]]; then
		return $?
	fi

	BUILD_FOLDER_PREFIX="$BUILD_FOLDER_PREFIX" \
		BUILD_FOLDER_SUFFIX="$TIMESTAMP" \
		ARCHIVE_FOLDER="/var/www/html/builds" \
		TIMESTAMP="$TIMESTAMP" \
			$(dirname $0)/prepare $@

	# Only retain last three builds

	BUILD_COUNT=$(ls -1 "$BUILD_FOLDER_PREFIX/$1" | grep -vF '.log' | wc -l)

	if [[ $BUILD_COUNT -gt 3 ]]; then
		for BUILD_ID in $(ls -1 "$BUILD_FOLDER_PREFIX/$1" | grep -vF '.log' | sort | head -$(expr $BUILD_COUNT '-' 3)); do
			rm -rf "$BUILD_FOLDER_PREFIX/$1/$BUILD_ID"
		done
	fi
}

branches() {
	# Start build

	echo Started $(date)

	# Build all branches

	branch master 60
	branch 70x 70
	branch 62x 62
	branch 61x 61

	echo Completed $(date)

	# Finished build

	checkout master
}

checkout() {
	cleanup
	git checkout $1
}

cleanup() {
	pushd $PORTAL_SOURCE_ROOT > /dev/null

	git clean -xdf
	git reset --hard

	rm -rf $HOME/.gradle/caches/modules-2/files-2.1/com.liferay.portal
	rm -rf $HOME/.m2/repository/com/liferay/portal

	popd > /dev/null
}

fixpack() {
	if [ -f "/var/www/html/builds/${1}.tar.gz" ]; then
		return 0
	fi

	if [ "" == "$(git tag | grep -F "$1")" ]; then
		git fetch --no-tags git@github.com:liferay/liferay-portal-ee.git tags/$1:refs/tags/$1
	fi

	checkout $1

	if [[ 0 -ne $? ]]; then
		return $?
	fi

	BUILD_FOLDER_PREFIX="$BUILD_FOLDER_PREFIX/temp" \
		BUILD_FOLDER_SUFFIX="" \
		ARCHIVE_FOLDER="/var/www/html/builds" \
		TIMESTAMP="" \
			$(dirname $0)/prepare $1 80
}

fixpacks() {
	counter=4

	while [[ 0 -eq $? ]]; do
		counter=$(expr $counter '+' 1)
		tag_id=fix-pack-de-$counter-7010
		fixpack $tag_id
	done
}

update() {
	for remote in $(git remote -v | cut -f 1 | sort -u); do
		git fetch $remote --no-tags
	done

	git reflog expire --expire=now --all
	git gc --prune
}

if [ -z "${PORTAL_SOURCE_ROOT}" ]; then
	echo "Please set a PORTAL_SOURCE_ROOT for the build"
	exit 1
fi

if [ ! -e "$PORTAL_SOURCE_ROOT/.git" ]; then
	echo "${PORTAL_SOURCE_ROOT} is not a git repository"
	exit 1
fi

if [ -z "${BUILD_FOLDER_PREFIX}" ]; then
	echo "Please set a BUILD_FOLDER_PREFIX for the build"
	exit 1
fi

cd $PORTAL_SOURCE_ROOT && update && branches && fixpacks
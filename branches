#!/bin/bash

TIMESTAMP=$(date +%Y%m%d)

branches() {
	# Start build

	echo Started $(date)

	# Build all branches

	if [ -d "$BUILD_FOLDER_PREFIX/master" ]; then
		checkout master && git rebase upstream/master && preparebranch master 60
	fi

	if [ -d "$BUILD_FOLDER_PREFIX/70x" ]; then
		checkout ee-7.0.x && git rebase upstream/ee-7.0.x && preparebranch 70x 70
	fi

	if [ -d "$BUILD_FOLDER_PREFIX/62x" ]; then
		checkout ee-6.2.x && git rebase upstream/ee-6.2.x && preparebranch 62x 62
	fi

	if [ -d "$BUILD_FOLDER_PREFIX/61x" ]; then
		checkout ee-6.1.x && git rebase upstream/ee-6.1.x && preparebranch 61x 61
	fi

	echo Completed $(date)

	# Finished build

	checkout master

	# Only retain last three builds

	for folder in master 70x 62x 61x; do
		if [ -d $BUILD_FOLDER_PREFIX/$folder ]; then
			BUILD_COUNT=$(ls -1 $BUILD_FOLDER_PREFIX/$folder | grep -vF '.log' | wc -l)

			if [[ $BUILD_COUNT -gt 3 ]]; then
				for BUILD_ID in $(ls -1 $BUILD_FOLDER_PREFIX/$folder | grep -vF '.log' | sort | head -$(expr $BUILD_COUNT '-' 3)); do
					rm -rf "$BUILD_FOLDER_PREFIX/$folder/$BUILD_ID"
				done
			fi
		fi
	done
}

checkout() {
	cleanup
	git checkout $1
}

cleanup() {
	pushd $PORTAL_SOURCE_ROOT > /dev/null

	git clean -xdf
	git reset --hard

	rm -rf $HOME/.gradle/caches/modules-2/files-2.1/com.liferay.portal
	rm -rf $HOME/.m2/repository/com/liferay/portal

	popd > /dev/null
}

preparebranch() {
	BUILD_FOLDER_PREFIX="$BUILD_FOLDER_PREFIX" \
		BUILD_FOLDER_SUFFIX="$TIMESTAMP" \
		ARCHIVE_FOLDER="/var/www/html/builds" \
		TIMESTAMP="$TIMESTAMP" \
			$(dirname $0)/prepare $@
}

preparefixpack() {
	BUILD_FOLDER_PREFIX="$BUILD_FOLDER_PREFIX" \
		BUILD_FOLDER_SUFFIX="" \
		ARCHIVE_FOLDER="/var/www/html/builds" \
		TIMESTAMP="" \
			$(dirname $0)/prepare temp 80
}

fixpacks() {
	counter=4

	while [[ 0 -eq $? ]]; do
		counter=$(expr $counter '+' 1)
		tag_id=fix-pack-de-$id-7010

		if [ "" == "$(git tag | grep -F "$tag_id")" ]; then
			git fetch --no-tags git@github.com:liferay/liferay-portal-ee.git tags/$tag_id:refs/tags/$tag_id
		fi

		if [ ! -f "/var/www/html/builds/${tag_id}.tar.gz" ]; then
			checkout ${tag_id} && preparefixpack
		fi
	done
}

update() {
	for remote in $(git remote -v | cut -f 1 | sort -u); do
		git fetch $remote --no-tags
	done

	git reflog expire --expire=now --all
	git gc --prune
}

if [ -z "${PORTAL_SOURCE_ROOT}" ]; then
	echo "Please set a PORTAL_SOURCE_ROOT for the build"
	exit 1
fi

if [ ! -e "$PORTAL_SOURCE_ROOT/.git" ]; then
	echo "${PORTAL_SOURCE_ROOT} is not a git repository"
	exit 1
fi

if [ -z "${BUILD_FOLDER_PREFIX}" ]; then
	echo "Please set a BUILD_FOLDER_PREFIX for the build"
	exit 1
fi

cd $PORTAL_SOURCE_ROOT && update && branches && fixpacks
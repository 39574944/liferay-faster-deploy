#!/bin/bash

buildopts() {
	JAVA_VERSION=0

	if [ "" != "$(which java)" ]; then
		JAVA_VERSION=$(java -version 2>&1 | head -1 | cut -d'"' -f 2 | cut -d'.' -f 2)
	fi

	ANT_OPTS='-Xms2g -Xmx2g'

	if [[ 8 -gt $JAVA_VERSION ]]; then
		ANT_OPTS="$ANT_OPTS -XX:MaxPermSize=1g"
	fi

	export ANT_OPTS

	GRADLE_OPTS='-Xms3g -Xmx3g -Dorg.gradle.workers.max=1'

	if [[ 8 -gt $JAVA_VERSION ]]; then
		GRADLE_OPTS="$GRADLE_OPTS -XX:MaxPermSize=512m"
	fi

	export GRADLE_OPTS
}

checkjava() {
	local MINIMUM_JAVA_VERSION=8

	if [ -f "$GIT_ROOT/build.properties" ]; then
		MINIMUM_JAVA_VERSION=$(grep javac.source "$GIT_ROOT/build.properties" | cut -d'=' -f 2 | cut -d'.' -f 2)
	fi

	if [[ $MINIMUM_JAVA_VERSION -gt $JAVA_VERSION ]]; then
		javahome $MINIMUM_JAVA_VERSION

		if [ "" != "$(which java)" ]; then
			buildopts
		fi
	fi

	if [[ $MINIMUM_JAVA_VERSION -gt $JAVA_VERSION ]]; then
		java -version

		echo
		echo "Please switch to JDK $MINIMUM_JAVA_VERSION or higher before building"

		return 1
	fi
}

gitroot() {
	GIT_ROOT=$PWD

	while [ ! -e "$GIT_ROOT/.git" ] && [ "/" != "$GIT_ROOT" ]; do
		GIT_ROOT=$(dirname "$GIT_ROOT")
	done

	if [ ! -e "$GIT_ROOT/.git" ]; then
		GIT_ROOT=
		echo "Unable to find version control root"
		return 1
	fi
}

initfolder() {
	mkdir -p $GIT_ROOT/.redeploy
}

javahome() {
	. $(dirname ${BASH_SOURCE[0]})/javahome $@
}

if [ "" == "$USER" ]; then
	USER=$USERNAME
fi

if [ -d /usr/local/bin ] && [ "" == "$(echo $PATH | grep -F '/usr/local/bin')" ]; then
	PATH="$PATH:/usr/local/bin"
fi

buildopts

gitroot && initfolder && checkjava
#!/bin/bash

ci_retest() {
	if [ ! -f test.class.file.names.properties ]; then
		ant -f build-test.xml record-test-class-file-names
	fi

	antargs=$(echo "$@" | tr -d '\n' | tr ' ' '\n' | grep -- '^-D' | tr '\n' ' ')

	local test_group_index=$(get_test_group $@)

	if [ "LRSUPPORT" == "${test_group_index}" ]; then
		echo generate_test_group $@
	fi

	if [ "" != "${test_group_index}" ]; then
		cd portal-impl
		echo ant test-class-group -Dtest.type=integration -Dtest.class.group.index=${test_group_index} $antargs
	else
		echo No tests matched the arguments: "$@"
	fi
}

generate_test_group() {
	if [ "" == "$(grep TEST_CLASS_GROUP_LRSUPPORT test.class.file.names.properties)" ]; then
		cp -f "test.class.file.names.properties" "test.class.file.names.properties.orig"
	else
		cp -f "test.class.file.names.properties.orig" "test.class.file.names.properties"
	fi

	echo -e '\n\nTEST_CLASS_GROUP_LRSUPPORT=\\' >> test.class.file.names.properties

	for regarg in $(echo "$@" | tr -d '\n' | tr ' ' '\n' | grep -v -- '^-D'); do
		if [ -f "${GIT_ROOT}/$regarg" ]; then
			echo "Assuming $regarg refers to a file containing test results"

			for file in $(grep -o "Running .*Test$" $regarg | cut -d' ' -f 2 | sed 's@\.@/@g' | awk '{ print $1 ".java" }'); do
				if [ ! -f portal-impl/test/integration/$file ]; then
					continue
				fi

				echo $file | sed 's/\.java$/.class/g' | awk '{ print "  " $1 ",\\" }' >> test.class.file.names.properties
			done
		else
			echo "Assuming $regarg refers to a part of a test name"

			for file in $(git ls-files portal-impl/test/integration | grep -F $regarg | cut -d'/' -f 4-); do
				echo $file | sed 's/\.java$/.class/g' | awk '{ print "  " $1 ",\\" }' >> test.class.file.names.properties
			done
		fi
	done

	sed -i.bak '$s/,\\$//' test.class.file.names.properties
	rm test.class.file.names.properties.bak
}

get_test_group() {
	local test_group_index=

	for regarg in $(echo "$@" | tr -d '\n' | tr ' ' '\n' | grep -v -- '^-D'); do
		if [ -f "${GIT_ROOT}/$regarg" ]; then
			for file in $(grep -o "Running .*Test$" $regarg | cut -d' ' -f 2 | sed 's@\.@/@g' | awk '{ print $1 ".java" }'); do
				if [ ! -f portal-impl/test/integration/$file ]; then
					continue
				fi

				local candidate_test_group_index=$(grep -F "$(echo $file | sed 's/\.java$/.class/g')" test.class.file.names.properties | cut -d'=' -f 1 | cut -d'_' -f 4)

				if [ "" == "${test_group_index}" ]; then
					test_group_index=$candidate_test_group_index
				elif [ "${test_group_index}" != "${candidate_test_group_index}" ]; then
					test_group_index=LRSUPPORT
					break
				fi
			done
		else
			for file in $(git ls-files portal-impl/test/integration | grep -F $regarg | cut -d'/' -f 4-); do
				local candidate_test_group_index=$(grep -F "$(echo $file | sed 's/\.java$/.class/g')" test.class.file.names.properties | cut -d'=' -f 1 | cut -d'_' -f 4)

				if [ "" == "${test_group_index}" ]; then
					test_group_index=$candidate_test_group_index
				elif [ "${test_group_index}" != "${candidate_test_group_index}" ]; then
					test_group_index=LRSUPPORT
					break
				fi
			done
		fi
	done

	if [ "" != "${test_group_index}" ]; then
		echo ${test_group_index}
	fi
}

setopts() {
	. "$(dirname "$(dirname "${BASH_SOURCE[0]}")")/setopts"
}

setopts
ci_retest $@
#!/bin/bash

disablegwnpm() {
	VCS_ROOT=$(git rev-parse --show-toplevel)

	MODULES_HOME=

	if [ -f $VCS_ROOT/modules/build.gradle ]; then
		MODULES_HOME=$VCS_ROOT/modules
	elif [ -f $VCS_ROOT/build.gradle ]; then
		MODULES_HOME=$VCS_ROOT
	else
		return 0
	fi

	git checkout $MODULES_HOME/build.gradle

	echo "

gradle.beforeProject {
	Project project ->

	configure(project) {
		pluginManager.withPlugin('com.liferay.node') {
			node {
				nodeDir = ['$HOME', '.liferay', 'node', 'node-$NODE_VERSION'].join(File.separator)
			}

			cleanDownloadNode.enabled = false
			npmInstall.enabled = false
		}
	}
}
" >> $MODULES_HOME/build.gradle

}

getglobalnode() {
	NODE_VERSION=$(node --version)

	if [ "" == "$NODE_VERSION" ]; then
		echo "node is not present in the path"
		return 1
	fi

	if [ -d $HOME/.liferay/node/node-${NODE_VERSION} ]; then
		return 0
	fi

	mkdir -p $HOME/.liferay/node/

	pushd $HOME/.liferay/node/ > /dev/null

	echo "Downloading global node.js for Gradle"

	if [ "Darwin" == "$(uname -s)" ]; then
		curl -O https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-darwin-x64.tar.gz
		tar -zxf node-${NODE_VERSION}-darwin-x64.tar.gz
		rm node-${NODE_VERSION}-darwin-x64.tar.gz
	else
		curl -O https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz
		tar -zxf node-${NODE_VERSION}-linux-x64.tar.gz
		rm node-${NODE_VERSION}-linux-x64.tar.gz
	fi

	mv node-${NODE_VERSION}-linux-x64 node-${NODE_VERSION}

	curl -O https://nodejs.org/dist/${NODE_VERSION}/win-x64/node.exe
	mv node.exe node-${NODE_VERSION}/bin/

	popd > /dev/null
}

getglobalnode && disablegwnpm
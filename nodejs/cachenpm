#!/bin/bash

cachenpm() {
	cache_home="$HOME/.liferay/node/cache"

	if [ "clean" == "$1" ]; then
		rm -rf "${cache_home}"
	fi

	NPM_INSTALL='npm install'

	findmodules $@

	# . $(dirname "${BASH_SOURCE[0]}")/globalcache $@
	. $(dirname "${BASH_SOURCE[0]}")/modulecache $@
	# . $(dirname "${BASH_SOURCE[0]}")/modulerun $@

	NPM_PRODUCTION=$(npm config get production)
	npm config set production false

	if [ "" != "$NPM_PRODUCTION" ] && [ "false" != "$NPM_PRODUCTION" ]; then
		npm config set production $NPM_PRODUCTION
	fi
}

dirnames() {
	python $(dirname "${BASH_SOURCE[0]}")/../dirnames.py
}

disablegwnpm() {
	$(dirname "${BASH_SOURCE[0]}")/disablegwnpm
}

findmodules() {
	mkdir -p "${cache_home}"
	cat /dev/null > "${cache_home}/cachenpm.txt"

	pushd "$GIT_ROOT" > /dev/null

	if [ "" == "$1" ]; then
		for folder in $(git ls-files modules | grep -F package.json | dirnames); do
			if [ ! -f "$folder/.lfrbuild-portal" ]; then
				continue
			fi

			echo "$PWD/$folder/package.json" >> "${cache_home}/cachenpm.txt"
		done
	elif [ -d "$1" ]; then
		if [ -f package.json ]; then
			echo "$1/package.json" >> "${cache_home}/cachenpm.txt"
		fi
	else
		$(dirname "${BASH_SOURCE[0]}")/../gitchanges $@

		for folder in $(cat .redeploy/changes_gradle_2.txt); do
			if [ ! -f "$folder/package.json" ]; then
				continue
			fi

			echo "$PWD/$folder/package.json" >> "${cache_home}/cachenpm.txt"
		done
	fi

	popd > /dev/null
}

setopts() {
	. $(dirname ${BASH_SOURCE[0]})/../setopts
}

setopts

cachenpm $@ && disablegwnpm
#!/bin/bash

gitchanges() {
	# Generate the source trie

	echo "Identifying module structure..."

	$(dirname "${BASH_SOURCE[0]}")/sourcetrie

	# Identify the changes

	if [ "" == "$2" ]; then
		echo "Computing changes between HEAD and $1..."
	else
		echo "Computing changes between HEAD and $2..."
	fi

	cat /dev/null > .redeploy/changes.txt

	if [ "" != "$1" ] && [ "local" != "$1" ]; then
		local COMPARE_HASH=$(git log -1 --pretty='%H' $1)
		git diff ${COMPARE_HASH}..HEAD --name-only | grep -vF .iml | grep -vF rebel.xml | grep -vF yarn.lock >> .redeploy/changes.txt
	fi

	echo "Computing local changes..."

	git status -s | grep -vF '??' | grep -vF '.redeploy' | grep -vF .iml | grep -vF rebel.xml | grep -vF 'yarn.lock' | awk '{print $2}' >> .redeploy/changes.txt

	if [[ 0 -eq $(cat .redeploy/changes.txt | grep -c '^') ]]; then
		echo 'No changes detected.'

		cat /dev/null > .redeploy/changes_ant.txt
		cat /dev/null > .redeploy/changes_gradle_1.txt
		cat /dev/null > .redeploy/changes_gradle_2.txt

		return 0
	fi

	# Identify the folders that changed

	echo "Comparing changes to module structure..."

	python $(dirname "${BASH_SOURCE[0]}")/gitchanges.py

	echo "Change detection completed."
}

gitchanges $@
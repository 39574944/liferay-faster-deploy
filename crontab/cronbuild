#!/bin/bash

USER=$(whoami)
HOME=/home/$USER

source $HOME/redeploy/crontab/aliases

# Make sure we are in the home folder

cd $HOME

# If another build is running, don't overlap

if [ -f $HOME/.build ] && [ "clean" != "$1" ]; then
	echo Script already running.
	exit 1
fi

# Make sure other builds know we are running

touch $HOME/.build

# If we're doing a clean build, remove past pull request branches
# and also make sure we have an up-to-date set of branches to use
# for our rebase.

if [ "clean" == "$1" ]; then
	cx all

	pushd $HOME/source

	for pull_id in $(git branch | grep -o 'pr-.*' | cut -d'-' -f 2); do
		git branch -D pr-$pull_id
		rm -f /var/www/html/builds/${pull_id}-*
	done

	popd

	PORTAL_SOURCE_ROOT=$HOME/source \
		BUILD_FOLDER_PREFIX=$HOME \
			$HOME/redeploy/crontab/branches
fi

# If this is a pull request build server, run our pull request builds

PULL_USER=$(git config github.pull-user)

if [ "" != "$PULL_USER" ]; then
	rm -rf "$HOME/builds"
	mkdir "$HOME/builds"

	PORTAL_SOURCE_ROOT=$HOME/source \
		BUILD_FOLDER_PREFIX=$HOME/builds \
			$HOME/redeploy/crontab/pulls $@
fi

# If we're doing a clean build, we'll want to start up the builds of
# the branches so other people can use them.

if [ "clean" == "$1" ]; then
	for folder in master 70x 62x 61x; do
		cr $folder
	done
fi

# Make sure other builds know we are finished

rm $HOME/.build
#!/bin/bash

pushd $(dirname "${BASH_SOURCE[0]}") > /dev/null
SCRIPT_FOLDER=$(pwd -P)
popd > /dev/null

compile() {
	echo "Starting compilation for $1"
	GIT_HASH=$(git log -1 --pretty='%H')

	enable_marketplace_app_deployment

	# Setup properties

	echo "app.server.parent.dir=$LIFERAY_HOME" > app.server.$USER.properties

	ARCHIVE_HOME="$HOME/.liferay/tomcat" \
		$SCRIPT_FOLDER/../appserverprops

	# Mass change timestamps

	$(dirname ${SCRIPT_FOLDER})/../githashtime

	# Begin building

	echo 'Git Hash:' | tee "${LIFERAY_HOME}.log"
	echo "$GIT_HASH" | tee -a "${LIFERAY_HOME}.log"
	echo '' | tee -a "${LIFERAY_HOME}.log"

	if [ -f working.dir.properties ] && [ -f build-working-dir.xml ]; then
		ant -f build-working-dir.xml
	fi

	fixdefaults

	if [ -f modules/build.gradle ]; then
		$SCRIPT_FOLDER/../skipmp | tee -a "${LIFERAY_HOME}.log"
		$SCRIPT_FOLDER/../nodejs/cachenpm | tee -a "${LIFERAY_HOME}.log"
	fi

	$SCRIPT_FOLDER/../fixbnd

	set -o pipefail
	ant compile deploy | tee -a "${LIFERAY_HOME}.log"
	EXIT_CODE=$?
	set +o pipefail

	disable_marketplace_app_deployment

	if [[ $EXIT_CODE -ne 0 ]]; then
		return $EXIT_CODE
	fi

	$SCRIPT_FOLDER/../tomcat/precompile
	return 0
}

disable_marketplace_app_deployment() {
	if [ "6.1.x" == "${BASE_BRANCH}" ]; then
		return 0
	fi

	rm portal-impl/src/com/liferay/portal/license/util/CustomLicenseManagerImpl.java
	sed -i.bak 's/CustomLicenseManagerImpl/DefaultLicenseManagerImpl/g' portal-impl/src/META-INF/util-spring.xml
}

enable_marketplace_app_deployment() {
	if [ "6.1.x" == "${BASE_BRANCH}" ]; then
		return 0
	fi

	echo "Enabling Marketplace app deployment on bundle built from source..."

	echo '
package com.liferay.portal.license.util;

import java.util.HashMap;
import java.util.Map;

public class CustomLicenseManagerImpl extends DefaultLicenseManagerImpl {
	@Override
	public int getLicenseState(Map<String, String> licenseProperties) {
		return STATE_GOOD;
	}

	@Override
	public Map<String, String> getLicenseProperties(String productId) {
		Map<String, String> licenseProperties = new HashMap<String, String>();

		licenseProperties.put("productVersion", String.valueOf(Integer.MAX_VALUE));

		return licenseProperties;
	}
}
' > portal-impl/src/com/liferay/portal/license/util/CustomLicenseManagerImpl.java

	sed -i.bak 's/DefaultLicenseManagerImpl/CustomLicenseManagerImpl/g' portal-impl/src/META-INF/util-spring.xml
}

finish() {
	if [ -d tmp/lib-pre ]; then
		cp -R tmp/lib-pre ${LIFERAY_HOME}/osgi/
	fi

	local TOMCAT_VERSION=$(grep -F app.server.tomcat.version= app.server.properties | cut -d'=' -f 2)
	TOMCAT_FOLDER=$LIFERAY_HOME/tomcat-${TOMCAT_VERSION}

	cp tools/servers/tomcat/bin/setenv.* $TOMCAT_FOLDER/bin
	sed -i 's/@.*@ //g' $TOMCAT_FOLDER/bin/setenv.sh
	sed -i 's/@.*@ //g' $TOMCAT_FOLDER/bin/setenv.bat

	echo -en '\nGIT_HASH="'$GIT_HASH'"' >> $TOMCAT_FOLDER/bin/setenv.sh
	echo -en '\r\nset GIT_HASH="'$GIT_HASH'"' >> $TOMCAT_FOLDER/bin/setenv.bat

	echo -en '\nCATALINA_OPTS="$CATALINA_OPTS -Denv.COMPUTERNAME='$1'-$GIT_HASH"' >> $TOMCAT_FOLDER/bin/setenv.sh
	echo -en '\r\nset "CATALINA_OPTS=%CATALINA_OPTS% -Denv.COMPUTERNAME='$1'-%GIT_HASH%"' >> $TOMCAT_FOLDER/bin/setenv.bat

	echo -en '\n#JAVA_HOME=' >> $TOMCAT_FOLDER/bin/setenv.sh
	echo -en '\r\nrem set JAVA_HOME=' >> $TOMCAT_FOLDER/bin/setenv.bat

	echo -en '\nPATH=$JAVA_HOME/bin:$PATH' >> $TOMCAT_FOLDER/bin/setenv.sh
	echo -en '\r\nset PATH="%JAVA_HOME%\\bin;%PATH%"' >> $TOMCAT_FOLDER/bin/setenv.bat

	if [ "ee-6.2.x" == "$BASE_BRANCH" ] || [ "ee-6.1.x" == "$BASE_BRANCH" ]; then
		sed -i 's/-Xmx[0-9]*[gm]/-Xms1g -Xmx1g/g' $TOMCAT_FOLDER/bin/setenv.sh
		sed -i 's/-Xmx[0-9]*[gm]/-Xms1g -Xmx1g/g' $TOMCAT_FOLDER/bin/setenv.bat
	else
		sed -i 's/-Xmx[0-9]*[gm]/-Xms2g -Xmx2g/g' $TOMCAT_FOLDER/bin/setenv.sh
		sed -i 's/-Xmx[0-9]*[gm]/-Xms2g -Xmx2g/g' $TOMCAT_FOLDER/bin/setenv.bat
	fi

	sed -i 's/ start / jpda start /g' $TOMCAT_FOLDER/bin/startup.sh
	sed -i 's/ start / jpda start /g' $TOMCAT_FOLDER/bin/startup.bat

	chmod u+x $TOMCAT_FOLDER/bin/*.sh

	pushd $LIFERAY_HOME

	dos2unix $TOMCAT_FOLDER/bin/setenv.sh
	dos2unix $TOMCAT_FOLDER/bin/startup.sh

	unix2dos $TOMCAT_FOLDER/bin/setenv.bat
	unix2dos $TOMCAT_FOLDER/bin/startup.bat

	if [ -d "${ARCHIVE_FOLDER}" ]; then
		find ${ARCHIVE_FOLDER} -name "${1}-[0-9]*.tar.gz" | xargs rm

		if [ "" != "$TIMESTAMP" ]; then
			tar -zcf ${ARCHIVE_FOLDER}/${1}-${TIMESTAMP}.tar.gz *
		else
			tar -zcf ${ARCHIVE_FOLDER}/${1}.tar.gz *
		fi
	fi

	if [ -d /var/www/html/logs ] && [ "" != "$TIMESTAMP" ]; then
		rm /var/www/html/logs/$1
		ln -s "$LIFERAY_HOME" /var/www/html/logs/$1
	fi

	popd

	sed -i "s@#JAVA_HOME=@JAVA_HOME=$JAVA_HOME@g" $TOMCAT_FOLDER/bin/setenv.sh

	if [ "" != "$2" ]; then
		switchport 80 $2
	fi
}

fixdefaults() {
	if [ "" != "$(grep -F useNpmCI modules/build.gradle)" ]; then
		return 0
	fi

	local GRADLE_PLUGINS_DEFAULTS=$(grep com.liferay.gradle.plugins.defaults modules/build-buildscript.gradle | grep -o 'version: "[^"]*"' | cut -d'"' -f 2)

	if [ "5.3" != "$(echo ${GRADLE_PLUGINS_DEFAULTS} | cut -d'.' -f 1,2)" ]; then
		return 0
	fi

	if [[ 29 -lt $(echo ${GRADLE_PLUGINS_DEFAULTS} | cut -d'.' -f 3) ]]; then
		return 0
	fi

	local PUBLIC_PACKAGE_JSON=$(git ls-files modules | grep -F package.json | grep -vF '/src/' | grep -c '^')
	local PUBLIC_PACKAGE_LOCK_JSON=$(git ls-files modules | grep -F package-lock.json | grep -vF '/src/' | grep -c '^')

	local PRIVATE_PACKAGE_JSON=0
	local PRIVATE_PACKAGE_LOCK_JSON=0

	if [ -f git-commit-portal ]; then
		PRIVATE_PACKAGE_JSON=${PUBLIC_PACKAGE_JSON}
		PRIVATE_PACKAGE_LOCK_JSON=${PUBLIC_PACKAGE_LOCK_JSON}

		PUBLIC_PACKAGE_JSON=$(git ls-tree -r --name-only $(cat git-commit-portal) -- modules | grep -F package.json | grep -vF '/src/' | grep -c '^')
		PUBLIC_PACKAGE_LOCK_JSON=$(git ls-tree -r $(cat git-commit-portal) -- modules | grep -F package-lock.json | grep -vF '/src/' | grep -c '^')
	fi

	if [[ $(expr ${PUBLIC_PACKAGE_JSON} '+' ${PRIVATE_PACKAGE_JSON}) -ne $(expr ${PUBLIC_PACKAGE_LOCK_JSON} '+' ${PRIVATE_PACKAGE_LOCK_JSON}) ]]; then
		sed -i '/com.liferay.gradle.plugins.defaults/s/version: "[^"]*"/version: "5.3.29"/' modules/build-buildscript.gradle
	fi
}

javahome() {
	. $SCRIPT_FOLDER/../javahome $@
}

prepare() {
	BASE_BRANCH=ee-$(grep -F 'lp.version.major=' release.properties | cut -d'=' -f 2).x
	JSP_JAVA_VERSION=

	ANT_OPTS='-Xms4g -Xmx4g'

	if [ "ee-6.2.x" == "$BASE_BRANCH" ]; then
		export ANT_OPTS="${ANT_OPTS} -XX:MaxPermSize=512m"
		javahome 6
	elif [ "ee-6.1.x" == "$BASE_BRANCH" ]; then
		export ANT_OPTS="${ANT_OPTS} -XX:MaxPermSize=512m"
		javahome 6
	else
		export ANT_OPTS="${ANT_OPTS} -Dorg.gradle.workers.max=1"
		javahome 8
	fi

	echo $JAVA_HOME

	compile $1 && finish $1 $2

	if [ -d "${ARCHIVE_FOLDER}" ]; then
		if [ "" != "$TIMESTAMP" ]; then
			cp "${LIFERAY_HOME}.log" ${ARCHIVE_FOLDER}/$1-${TIMESTAMP}.log
		else
			cp "${LIFERAY_HOME}.log" ${ARCHIVE_FOLDER}/$1.log
		fi
	fi
}

switchport() {
	if [ "" == "$(grep JPDA_ADDRESS= $TOMCAT_FOLDER/bin/setenv.sh)" ]; then
		echo -e "\nJPDA_ADDRESS=${1}00" >> $TOMCAT_FOLDER/bin/setenv.sh
		echo -e "\r\nset JPDA_ADDRESS=${1}00" >> $TOMCAT_FOLDER/bin/setenv.bat
	fi

	sed -i "s/\"$1/\"$2/g" $TOMCAT_FOLDER/conf/server.xml
	sed -i "s/JPDA_ADDRESS=${1}/JPDA_ADDRESS=${2}/g" $TOMCAT_FOLDER/bin/setenv.sh
	sed -i "s/JPDA_ADDRESS=${1}/JPDA_ADDRESS=${2}/g" $TOMCAT_FOLDER/bin/setenv.bat
}

if [ -z "${BUILD_FOLDER_PREFIX}" ]; then
	echo "Please set a BUILD_FOLDER_PREFIX for the build"
	exit 1
fi

if [ -z "${ARCHIVE_FOLDER}" ]; then
	echo "Please set a ARCHIVE_FOLDER for the build"
	exit 1
fi

if [ ! -z "${BUILD_FOLDER_SUFFIX}" ] && [ "/" != "$BUILD_FOLDER_SUFFIX" ]; then
	LIFERAY_HOME="$BUILD_FOLDER_PREFIX/$1/$BUILD_FOLDER_SUFFIX"
else
	LIFERAY_HOME="$BUILD_FOLDER_PREFIX/$1"
fi

prepare $@